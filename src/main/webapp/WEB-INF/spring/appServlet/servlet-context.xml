<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="org.hub.controller" />
	
	<beans:bean id="multipartResolver" 
	class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>
	
	<!-- 네이버 로그인 -->
	<context:component-scan base-package="org.hub.auth" />		
	
	<beans:bean id="naverClientID" class="java.lang.String">
		<beans:constructor-arg value="xsm5O_NQGk6PM_LPpj75" />
	</beans:bean>
	
	<beans:bean id="naverClientSecret" class="java.lang.String">
		<beans:constructor-arg value="RzAe5ROoPc" />
	</beans:bean>
	
	<beans:bean id="naverRedirectUrl" class="java.lang.String">
		<beans:constructor-arg value="http://localhost:8080/user/auth/naver/callback" />
	</beans:bean>
	
	<!-- 클라이언트 아이디, 클라이언트 시크릿 등이 바뀌면 일일이 바꾸기 귀찮으니까 이렇게 묶는다 -->
	<!-- arg가 4개죠. 이 4개의 arg를 받는 생성자를 SnsValue 클래스에 만듦 -->
	<beans:bean id="naverSns" class="org.hub.auth.SnsValue">
		<beans:constructor-arg value="naver" />
		<beans:constructor-arg ref="naverClientID" />
		<beans:constructor-arg ref="naverClientSecret" />
		<beans:constructor-arg ref="naverRedirectUrl" />
	</beans:bean>
	<!-- 새로추가 -->
	<!-- 카카오 로그인 -->		
	<beans:bean id="kakaoClientID" class="java.lang.String">
		<beans:constructor-arg value="7e0290062cfde4629b0fd236688bc298" />
	</beans:bean>
	
	<beans:bean id="kakaoRedirectUrl" class="java.lang.String">
		<beans:constructor-arg value="http://localhost:8080/user/auth/kakao/callback" />
	</beans:bean>
	
	<beans:bean id="kakaoSns" class="org.hub.auth.SnsValue">
		<beans:constructor-arg value="kakao" />
		<beans:constructor-arg ref="kakaoClientID" />
		<beans:constructor-arg ref="kakaoRedirectUrl" />
	</beans:bean>
	
	<!-- 구글 로그인 -->
	<beans:bean id="googleClientID" class="java.lang.String">
        <beans:constructor-arg value="757517605158-rkubmc5cci2likhcic1o2uscqvg1qvn9.apps.googleusercontent.com" />
	</beans:bean>
	
	<beans:bean id="googleClientSecret" class="java.lang.String">
	        <beans:constructor-arg value="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" />
	</beans:bean>
	
	<beans:bean id="googleRedirectUrl" class="java.lang.String">
	        <beans:constructor-arg value="http://localhost:8080/user/auth/google/callback" />
	</beans:bean>
	    
	<beans:bean id="googleSns" class="org.hub.auth.SnsValue">
	        <beans:constructor-arg value="google" />
	        <beans:constructor-arg ref="googleClientID" />
	        <beans:constructor-arg ref="googleClientSecret" />
	        <beans:constructor-arg ref="googleRedirectUrl" />
	</beans:bean>
	
	<beans:bean id="googleConnectionFactory" class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg ref="googleClientID" />
		<beans:constructor-arg ref="googleClientSecret" />
	</beans:bean>
	    
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
	        <beans:property name="scope" value="https://www.googleapis.com/auth/userinfo.email" />
	        <!-- <beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" /> -->
	        <beans:property name="redirectUri" ref="googleRedirectUrl" />
	</beans:bean>
</beans:beans>
